<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-07-28T10:47:05+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Silas’s Note</title><subtitle>以正合, 以奇胜</subtitle><entry><title type="html">解决drupal8下面email 样式发送的问题, 以发送原始邮件(how to send raw email in dupal8 without any style and tag filter)</title><link href="http://localhost:4000/note/2021/07/27/how-to-send-raw-email-in-dupal8-without-any-style-and-tag-filter.html" rel="alternate" type="text/html" title="解决drupal8下面email 样式发送的问题, 以发送原始邮件(how to send raw email in dupal8 without any style and tag filter)" /><published>2021-07-27T10:28:09+08:00</published><updated>2021-07-27T10:28:09+08:00</updated><id>http://localhost:4000/note/2021/07/27/how-to-send-raw-email-in-dupal8-without-any-style-and-tag-filter</id><content type="html" xml:base="http://localhost:4000/note/2021/07/27/how-to-send-raw-email-in-dupal8-without-any-style-and-tag-filter.html">&lt;p&gt;我终于搞定了。 太不容易了， 用xdebug查了好久，才debug出来。&lt;/p&gt;

&lt;h4 id=&quot;问题problem&quot;&gt;问题(problem):&lt;/h4&gt;

&lt;p&gt;最近发现时间轴的总是有样式问题，  drupal默认对模板作了两次处理。  同样一个模板的， 我用nodejs来发就正常， 用drupal来发， 样式就出问题。 drupal默认对原始邮件的模板的样式和标签进行了过滤&lt;/p&gt;

&lt;h4 id=&quot;问题分析root-cause&quot;&gt;问题分析(root cause):&lt;/h4&gt;

&lt;h5 id=&quot;1-drupal内核代码进行了过滤drupal-core-code-have-do-some-filter&quot;&gt;1. drupal内核代码进行了过滤（drupal core code have do some filter).&lt;/h5&gt;

&lt;p&gt;以下是处理逻辑代码的位置， Html::transformRootRelativeUrlsToAbsolute会把数据转成dom对象， 再输出， 这中间会把样式和特殊的标签给去掉。&lt;/p&gt;

&lt;p&gt;/pathtodrupal/core/lib/Drupal/Core/Mail/MailManager.php&lt;/p&gt;

&lt;p&gt;line number 278:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // Retrieve the responsible implementation for this message.
    $system = $this-&amp;gt;getInstance(['module' =&amp;gt; $module, 'key' =&amp;gt; $key]);

    // Attempt to convert relative URLs to absolute.
    foreach ($message['body'] as &amp;amp;$body_part) {
      if ($body_part instanceof MarkupInterface) {
        $body_part = Markup::create(Html::transformRootRelativeUrlsToAbsolute((string) $body_part, \Drupal::request()-&amp;gt;getSchemeAndHttpHost()));
      }
    }

    // Format the message body.
    $message = $system-&amp;gt;format($message);

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;/pathtodrupal/core/lib/Drupal/Component/Utility/Html.php&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  public static function transformRootRelativeUrlsToAbsolute($html, $scheme_and_host) {
    assert(empty(array_diff(array_keys(parse_url($scheme_and_host)), [&quot;scheme&quot;, &quot;host&quot;, &quot;port&quot;])), '$scheme_and_host contains scheme, host and port at most.');
    assert(isset(parse_url($scheme_and_host)[&quot;scheme&quot;]), '$scheme_and_host is absolute and hence has a scheme.');
    assert(isset(parse_url($scheme_and_host)[&quot;host&quot;]), '$base_url is absolute and hence has a host.');

    $html_dom = Html::load($html);
    $xpath = new \DOMXpath($html_dom);
...
    return Html::serialize($html_dom);
  }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;2-drupal-formater-have-also-filter-the-tag&quot;&gt;2. drupal formater have also filter the tag.&lt;/h5&gt;

&lt;p&gt;在我的应用中， 我用了swiftmail formater, 它也去掉了特殊标签和样式。&lt;/p&gt;

&lt;p&gt;/pathtodrupal/modules/contrib/swiftmailer/src/Plugin/Mail/SwiftMailer.php&lt;/p&gt;

&lt;h4 id=&quot;如何解决how-to-solve&quot;&gt;如何解决(how to solve)&lt;/h4&gt;

&lt;h5 id=&quot;1-保证传给发邮件函数的body为string-而不是markup对象passing-string-instead-of-markup-object&quot;&gt;1. 保证传给发邮件函数的body为string, 而不是markup对象(passing string instead of markup object)&lt;/h5&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function mymodule_sendmail($to, $subject, $body, $params = []) {

  $from = \Drupal::config('system.site')-&amp;gt;get('mail');
  $params['subject'] = $subject;
  $params['body'] = $body;
  $langcode = \Drupal::languageManager()-&amp;gt;getDefaultLanguage();

  // Send email with drupal_mail.
  return \Drupal::service('plugin.manager.mail')-&amp;gt;mail('wristcheck_mail', 'wristcheck_mail', $to, $langcode, $params, $from);
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;保证body为string, 而不是markup对象&lt;/p&gt;

&lt;h5 id=&quot;2-自己写一个不对邮件过滤的formaterwrite-a-self-formater&quot;&gt;2. 自己写一个不对邮件过滤的formater(write a self formater)&lt;/h5&gt;

&lt;p&gt;最后， 是自己写了一个emal formater， 替代了内置的formater了， 不做处理， 这样才解决。&lt;/p&gt;

&lt;p&gt;/pathtodrupal/modules/custom/mymodule/src/Plugin/Mail/MymoduleMailer.php&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php

namespace Drupal\mymodule\Plugin\Mail;

use Drupal\Core\Mail\MailInterface;


/**
 * Provides a 'Mymodule Mailer' plugin to send emails.
 *
 * @Mail(
 *   id = &quot;mymodulemailer&quot;,
 *   label = @Translation(&quot;Mymodule Mailer&quot;),
 *   description = @Translation(&quot;Mymodule Mailer Plugin.&quot;)
 * )
 */
class MymoduleMailer implements MailInterface {


  /**
   * Formats a message composed by drupal_mail().
   *
   * @param array $message
   *   A message array holding all relevant details for the message.
   *
   * @return array
   *   The message as it should be sent.
   */
  public function format(array $message) {
    $text = '';
    foreach ($message['body'] as $body) {
      $text = $text . $body;
    }
    $message['body'] = $text;
    return $message;
  }

  /**
   * Sends a message composed by drupal_mail().
   *
   * @param array $message
   *   A message array holding all relevant details for the message.
   *
   * @return bool
   *   TRUE if the message was successfully sent, and otherwise FALSE.
   */
  public function mail(array $message) {
    return FALSE;
  }


}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="Note" /><summary type="html">我终于搞定了。 太不容易了， 用xdebug查了好久，才debug出来。</summary></entry><entry><title type="html">aws-dynamodb的基本使用</title><link href="http://localhost:4000/note/2020/07/21/aws-dynamodb%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html" rel="alternate" type="text/html" title="aws-dynamodb的基本使用" /><published>2020-07-21T10:28:09+08:00</published><updated>2020-07-21T10:28:09+08:00</updated><id>http://localhost:4000/note/2020/07/21/aws-dynamodb%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8</id><content type="html" xml:base="http://localhost:4000/note/2020/07/21/aws-dynamodb%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html">&lt;h1 id=&quot;dynamodb&quot;&gt;Dynamodb&lt;/h1&gt;

&lt;h1 id=&quot;dynamodb-基本概念&quot;&gt;Dynamodb 基本概念&lt;/h1&gt;
&lt;p&gt;Amazon DynamoDB是一款完全托管的NoSQL数据库服务，可提供快速，可预测的性能和无缝可扩展性。&lt;/p&gt;

&lt;h2 id=&quot;dynamodb-基本结构&quot;&gt;DynamoDB 基本结构&lt;/h2&gt;

&lt;p&gt;DynamoDB 几个概念：tables, items, and attributes。（表，项目和属性）
Table是一个item集合， 每个item又是attributes集合。可以对应理解为mongodb中 集合 文档 属性。&lt;/p&gt;

&lt;h2 id=&quot;dynamodb中主键的概念&quot;&gt;DynamoDB中主键的概念&lt;/h2&gt;
&lt;p&gt;DynamoDB不像mongodb默认情况下会生成_id来唯一标识某条数据。所以在DynamoDB中就有了主键的概念。
指定表的主键。主键唯一标识表中的每个项目。（指定某个属性为主键）&lt;/p&gt;

&lt;p&gt;DynamoDB支持两种不同的主键：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1 分区键
DynamoDB使用分区键的值作为内部散列函数的输入。散列函数的输出确定项目将存储在其中的分区(DynamoDB内部的物理存储)。&lt;/li&gt;
  &lt;li&gt;2 复合主键(分区键和排序键)
DynamoDB使用分区键值作为内部散列函数的输入。散列函数的输出确定项目将存储在其中的分区（DynamoDB内部的物理存储）。所有具有相同分区键的项目都按照排序键值存储在一起。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在具有分区键和排序键的表中，有可能两个项具有相同的分区键值。但是，这两个项目必须具有不同的排序键值。&lt;/p&gt;

&lt;h1 id=&quot;部署dynamodb到本地服务器&quot;&gt;部署DynamoDB到本地服务器&lt;/h1&gt;

&lt;h2 id=&quot;下载并解压dynamodb-code&quot;&gt;下载并解压DynamoDB code&lt;/h2&gt;
&lt;p&gt;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html&lt;/p&gt;

&lt;h2 id=&quot;在dynamodb-目录下运行默认为8000端口&quot;&gt;在dynamodb 目录下运行（默认为8000端口）&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb

docker run -it -p 8686:8000 amazon/dynamodb-local:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;aws-cli&quot;&gt;Aws Cli&lt;/h1&gt;

&lt;h2 id=&quot;create-table&quot;&gt;create table&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb create-table \
    --table-name Music \
    --attribute-definitions \
        AttributeName=Artist,AttributeType=S \
        AttributeName=SongTitle,AttributeType=S \
    --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE \
    --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 \
    --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;upsert-item&quot;&gt;upsert item&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb put-item \
--table-name Music  \
--item \
    '{&quot;Artist&quot;: {&quot;S&quot;: &quot;No One You Know2&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Call Me Today2&quot;}, &quot;AlbumTitle&quot;: {&quot;S&quot;: &quot;Somewhat Famous2&quot;}}' \
--return-consumed-capacity TOTAL  \
--endpoint-url http://localhost:8686

aws dynamodb put-item \
    --table-name Music \
    --item \
    '{&quot;Artist&quot;: {&quot;S&quot;: &quot;Acme Band&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Happy Day&quot;}, &quot;AlbumTitle&quot;: {&quot;S&quot;: &quot;Songs About Life&quot;}, &quot;Awards&quot;: {&quot;N&quot;: &quot;10&quot;} }' \
  --return-consumed-capacity TOTAL  \
  --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;get-item&quot;&gt;get item&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb get-item --consistent-read \
    --table-name Music \
    --key '{ &quot;Artist&quot;: {&quot;S&quot;: &quot;Acme Band&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Happy Day&quot;}}' \
  --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;update-item&quot;&gt;update item&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb update-item \
    --table-name Music \
    --key '{ &quot;Artist&quot;: {&quot;S&quot;: &quot;Acme Band&quot;}, &quot;SongTitle&quot;: {&quot;S&quot;: &quot;Happy Day&quot;}}' \
    --update-expression &quot;SET AlbumTitle = :newval&quot; \
    --expression-attribute-values '{&quot;:newval&quot;:{&quot;S&quot;:&quot;Updated Album Title&quot;}}' \
    --return-values ALL_NEW \
  --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;query-items&quot;&gt;query items&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb query \
    --table-name Music \
    --key-condition-expression &quot;Artist = :name&quot; \
    --expression-attribute-values  '{&quot;:name&quot;:{&quot;S&quot;:&quot;Acme Band&quot;}}' \
  --endpoint-url http://localhost:8686

aws dynamodb query --table-name Music --key-conditions file://key-conditions.json --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;list-tables&quot;&gt;list tables&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb list-tables --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;desc-table&quot;&gt;desc table&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb describe-table --table-name Music --endpoint-url http://localhost:8686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;resource-limit&quot;&gt;resource limit&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb describe-limits --endpoint-url http://dynamodb-local:8686 --region us-west-2 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;create-a-global-secondary-index&quot;&gt;Create a Global Secondary Index&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb update-table \
    --table-name Music \
    --attribute-definitions AttributeName=AlbumTitle,AttributeType=S \
    --endpoint-url http://localhost:8686 \
    --global-secondary-index-updates \
    &quot;[{\&quot;Create\&quot;:{\&quot;IndexName\&quot;: \&quot;AlbumTitle-index\&quot;,\&quot;KeySchema\&quot;:[{\&quot;AttributeName\&quot;:\&quot;AlbumTitle\&quot;,\&quot;KeyType\&quot;:\&quot;HASH\&quot;}], \
    \&quot;ProvisionedThroughput\&quot;: {\&quot;ReadCapacityUnits\&quot;: 10, \&quot;WriteCapacityUnits\&quot;: 5      },\&quot;Projection\&quot;:{\&quot;ProjectionType\&quot;:\&quot;ALL\&quot;}}}]&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;query-the-global-secondary-index&quot;&gt;Query the Global Secondary Index&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb query \
--table-name Music \
--index-name AlbumTitle-index \
--key-condition-expression &quot;AlbumTitle = :name&quot; \
--expression-attribute-values  '{&quot;:name&quot;:{&quot;S&quot;:&quot;Somewhat Famous&quot;}}' \
--endpoint-url http://localhost:8686 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;delete-table&quot;&gt;delete table&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws dynamodb delete-table --table-name Music --endpoint-url http://localhost:8686 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GettingStarted.NodeJs.html&lt;/p&gt;

&lt;p&gt;[program:jenkins]
directory=/home/git/
command=java -Dmail.smtp.starttls.enable=”true” -jar /usr/local/jenkins/jenkins.war –httpPort=8000 –prefix=/jenkins
autostart=true
autorestart=true
stopsignal=QUIT
user=git
stdout_logfile=/var/log/supervisor/stdout_jenkins.log
stderr_logfile=/var/log/supervisor/stder_jenkins.log
environment = HOME=”/home/git”, USER=”git”&lt;/p&gt;

&lt;p&gt;-Dmail.smtp.starttls.enable=true&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SMTP server=smtp.office365.com&lt;/li&gt;
  &lt;li&gt;Default user e-mail suffix=@mycompany.com&lt;/li&gt;
  &lt;li&gt;Use SMTP Authentication (Checked)&lt;/li&gt;
  &lt;li&gt;User Name = my-name@mycompany.com&lt;/li&gt;
  &lt;li&gt;password = &lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;**
&lt;strong&gt;6. Use SSL (Un-Checked)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;SMTP Port = 587&lt;/li&gt;
  &lt;li&gt;Reply-To Address = my-name@mycompany.com&lt;/li&gt;
  &lt;li&gt;Charset = UTF8&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Note" /><summary type="html">Dynamodb</summary></entry><entry><title type="html">ChaCha20-Poly1305如何工作, golang示例</title><link href="http://localhost:4000/jekyll/update/2020/06/23/ChaCha20-Poly1305%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C,-golang%E7%A4%BA%E4%BE%8B.html" rel="alternate" type="text/html" title="ChaCha20-Poly1305如何工作, golang示例" /><published>2020-06-23T10:28:09+08:00</published><updated>2020-06-23T10:28:09+08:00</updated><id>http://localhost:4000/jekyll/update/2020/06/23/ChaCha20-Poly1305%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C,%20golang%E7%A4%BA%E4%BE%8B</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/06/23/ChaCha20-Poly1305%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C,-golang%E7%A4%BA%E4%BE%8B.html">&lt;p&gt;使用RFC 7539中定义的ChaCha20-Poly1305算法对消息进行加密和解密。&lt;/p&gt;

&lt;p&gt;1.1什么是ChaCha20-Poly1305 ？ 
ChaCha20-Poly1305表示使用Poly1305身份验证器以AEAD模式运行的ChaCha20 （加密和解密算法）。&lt;/p&gt;

&lt;p&gt;1.2什么是AE或AEAD？&lt;/p&gt;

&lt;p&gt;认证加密（AE）和带有关联数据的认证加密（AEAD）是一种加密消息并一起认证加密的形式。&lt;/p&gt;

&lt;p&gt;1.3认证加密意味着什么？ 
确保没有人修改密文（加密的消息），它的工作方式类似于验证文件的SHA或MD5哈希。 
Poly1305生成一个MAC （消息验证码）（128位，16字节），并将其附加到ChaCha20密文（加密的文本）中。 
在解密过程中，该算法检查MAC以确保没有人修改密文。&lt;/p&gt;

&lt;p&gt;1.4 ChaCha20-Poly1305如何工作？ 
ChaCha20加密使用密钥和IV（初始化值，nonce）将明文加密为等长的密文。 
Poly1305生成一个MAC（消息认证码）并将其附加到密文中。 最后，密文和明文的长度不同。&lt;/p&gt;

&lt;p&gt;1.5我可以将同一随机数重用于不同的密钥吗？ 
不可以，每个加密的随机数和密钥都必​​须是唯一的，否则密文会妥协&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

import (
	&quot;crypto/sha256&quot;
	&quot;fmt&quot;
	&quot;golang.org/x/crypto/chacha20poly1305&quot;
	&quot;os&quot;
)

func main() {
	pass := &quot;Hello&quot;
	msg := &quot;Pass&quot;
	argCount := len(os.Args[1:])
	if argCount &amp;gt; 0 {
		msg = string(os.Args[1])
	}
	if argCount &amp;gt; 1 {
		pass = string(os.Args[2])
	}
	key := sha256.Sum256([]byte(pass))
	aead, _ := chacha20poly1305.NewX(key[:])
	if pass == &quot;&quot; {
		a := make([]byte, 32)
		copy(key[:32], a[:32])
		aead, _ = chacha20poly1305.NewX(a)
	}
	if msg == &quot;&quot; {
		a := make([]byte, 32)
		msg = string(a)

	}
	nonce := make([]byte, chacha20poly1305.NonceSizeX)
	ciphertext := aead.Seal(nil, nonce, []byte(msg), nil)
	plaintext, _ := aead.Open(nil, nonce, ciphertext, nil)
	fmt.Printf(&quot;Message:\t%s\n&quot;, msg)
	fmt.Printf(&quot;Passphrase:\t%s\n&quot;, pass)
	fmt.Printf(&quot;\nKey:\t%x\n&quot;, key)
	fmt.Printf(&quot;Nonce:\t%x\n&quot;, nonce)
	fmt.Printf(&quot;\nCipher stream:\t%x\n&quot;, ciphertext)
	fmt.Printf(&quot;Plain text:\t%s\n&quot;, plaintext)
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/asecuritysite-when-bob-met-alice/go-and-chacha-6645684e7d&quot;&gt;https://medium.com/asecuritysite-when-bob-met-alice/go-and-chacha-6645684e7d&lt;/a&gt;
&lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;rfc7539&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">使用RFC 7539中定义的ChaCha20-Poly1305算法对消息进行加密和解密。</summary></entry></feed>